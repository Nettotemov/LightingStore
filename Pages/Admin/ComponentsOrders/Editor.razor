@page "/admin/orders/edit/{id:long}"
@inherits OwningComponentBase<IOrderRepository>

<style>
	div.validation-message {
		color: rgb(220, 53, 69);
		font-weight: 500
	}
</style>

<h3 class="bg-@ThemeColor text-white text-center p-1">@TitleText заказов</h3>
<EditForm Model="Order" OnValidSubmit="SaveOrder">
	<DataAnnotationsValidator />
	@if (Order.OrderID != 0)
	{
		<div class="form-group">
			<label>ID заказа</label>
			<input class="form-control" disabled value="@Order.OrderID" />
		</div>
	}
	<div class="form-group">
		<label>Имя клиента</label>
		<ValidationMessage For="@(() => Order.Name)" />
		<InputText class="form-control" @bind-Value="Order.Name" />
	</div>
	<div class="form-group">
		<label>Телефон клиента</label>
		<ValidationMessage For="@(() => Order.Phone)" />
		<InputText class="form-control" @bind-Value="Order.Phone" />
	</div>
	<div class="form-group">
		<label>Email клиента</label>
		<ValidationMessage For="@(() => Order.Email)" />
		<InputText class="form-control" @bind-Value="Order.Email" />
	</div>
	@* <div class="form-group">
		<label>Страна доставки</label>
		<ValidationMessage For="@(() => Order.Country)" />
		<InputText class="form-control" @bind-Value="Order.Country" />
	</div> *@
	<div class="form-group">
		<label>Город доставки</label>
		<ValidationMessage For="@(() => Order.City)" />
		<InputText class="form-control" @bind-Value="Order.City" />
	</div>
	<div class="form-group">
		<label>Индекс доставки</label>
		<ValidationMessage For="@(() => Order.Zip)" />
		<InputText class="form-control" @bind-Value="Order.Zip" />
	</div>
	<div class="form-group">
		<label>Адрес доставки</label>
		<ValidationMessage For="@(() => Order.Line1)" />
		<InputText class="form-control" @bind-Value="Order.Line1" />
		<InputText class="form-control" @bind-Value="Order.Line3" />
	</div>
	<div class="form-group">
		<label>Комментарий</label>
		<InputText class="form-control" @bind-Value="Order.Line2" />
	</div>
	<div class="form-group">
		<label>Статус заказа</label>
		<InputSelect class="form-select" @bind-Value="Order.StatusOrders">
			@foreach (var status in Enum.GetValues<StatusOrder>())
    		{
        		<option value="@status">@EnumExtensions.GetDisplayName(status)</option>
    		}
		</InputSelect>
	</div>
	<div class="mt-2">
		<button type="submit" class="btn btn-@ThemeColor">Сохранить</button>
		<NavLink class="btn btn-secondary" href="/admin/orders">Отмена</NavLink>
	</div>
</EditForm>

@code {

	public IOrderRepository Repository => Service;

	[Inject]
	public NavigationManager? NavManager { get; set; }

	[Parameter]
	public long Id { get; set; } = 0;
	public Order? Order { get; set; } = new Order();
	

	protected override void OnParametersSet()
	{
		if (Id != 0)
		{
			Order = Repository.Orders.FirstOrDefault(o => o.OrderID == Id) ?? new();
		}
	}

	public void SaveOrder()
	{
		Repository.SaveOrder(Order);

		NavManager?.NavigateTo("/admin/orders");
	}

	public string ThemeColor => Id == 0 ? "primary" : "warning";
	public string TitleText = "Редактирование";
}
